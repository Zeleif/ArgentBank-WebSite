swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error


  paths:
  /user/{user_id}/comptes-bancaires:
    get:
      summary: Liste des comptes bancaires de l'utilisateur
      description: Récupère la liste des comptes bancaires appartenant à l'utilisateur identifié par l'ID.
      security:
        - jwt_token: []

      parameters:
        - name: id_utilisateur
          in: path
          required: true
          type: string
          description: L'identifiant de l'utilisateur

      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                numero_compte:
                  type: string
                solde:
                  type: number
        '401':
          description: Non autorisé
        '404':
          description: Utilisateur non trouvé

        '500':
          description: Internal Server Error

   /transactions/{numero_compte}/dernieres-5:
    get:
      summary: Récupérer les 5 dernières transactions d'un compte
      description: Récupère les 5 dernières transactions du compte spécifié.
      security:
        - jwt_token: []

      parameters:
        - name: numero_compte
          in: path
          required: true
          type: string
          description: Le numéro du compte bancaire
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date
                montant:
                  type: number
                description:
                  type: string
        '401':
          description: Non autorisé
        '404':
          description: Compte non trouvé
        '500':
          description: Internal Server Error

     /transactions/{numero_compte}/mois/{mois}:
    get:
      summary: Récupérer les transactions du mois sélectionné pour un compte
      description: Récupère les transactions du mois spécifié pour le compte donné.
      security:
        - jwt_token: []

      parameters:
        - name: numero_compte
          in: path
          required: true
          type: string
          description: Le numéro du compte bancaire
        - name: mois
          in: path
          required: true
          type: integer
          minimum: 1
          maximum: 12
          description: Le mois pour lequel récupérer les transactions

      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date
                montant:
                  type: number
                description:
                  type: string
        '401':
          description: Non autorisé
        '404':
          description: Compte non trouvé

securityDefinitions:
  jwt_token:
    type: apiKey
    name: Authorization
    in: header
        '500':
          description: Internal Server Error
    paths:
  /transactions/{numero_compte}/{id_transaction}:
    put:
      summary: Modifier une transaction
      description: Modifie une transaction existante pour un compte spécifié.
      security:
        - jwt_token: []

      parameters:
        - name: numero_compte
          in: path
          required: true
          type: string
          description: Le numéro du compte bancaire
        - name: id_transaction
          in: path
          required: true
          type: string
          description: L'identifiant de la transaction à modifier
        - name: modification_transaction
          in: body
          required: true
          schema:
            type: object
            properties:
              montant:
                type: number
                description: Le nouveau montant de la transaction
              description:
                type: string
                description: La nouvelle description de la transaction

      responses:
        '200':
          description: OK
        '401':
          description: Non autorisé
        '404':
          description: Compte ou transaction non trouvé
        '422':
          description: Erreur de validation des données
        '500':
          description: Internal Server Error



securityDefinitions:
  jwt_token:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: object
            properties:
              transaction:
                type: object
                properties:
                  id:
                    type: string
                  date:
                    type: string
                  description:
                    type: string
                  amount:
                    type: integer
                  balance:
                    type: integer
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transaction:
            type: object
            properties:
              transactionType:
                type: string
              category:
                type: string
              notes:
                type: string
  Transaction:
    type: object
    properties:
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string

  TransactionDeletedResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string